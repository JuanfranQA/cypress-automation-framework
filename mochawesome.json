{
  "stats": {
    "suites": 44,
    "tests": 177,
    "passes": 170,
    "pending": 0,
    "failures": 7,
    "testsRegistered": 177,
    "passPercent": 96.045197740113,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-04-10T07:37:40.228Z",
    "end": "2023-04-10T07:41:46.400Z",
    "duration": 246172
  },
  "results": [
    {
      "uuid": "babec515-0ad3-49a3-a943-a90e0a1b37a3",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4047,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "608c431a-f72a-47de-8304-940b8172ff94",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "fbfb82b5-d116-4e4c-b229-21a0dfe077a5",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "b7567f52-831d-4e5c-ba13-003969a9c167",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "22f48502-6686-42e7-bde6-b1969de96866",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "4bd1beb1-48aa-4d86-919c-08af46c1c48e",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "9aed74e9-d38a-407f-9c5d-824e019da027",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "e29e37a6-ccdb-418c-9eea-c54ea916265b",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "24e50ad8-bdef-43b7-8cb1-e15153af4e43",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 904,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "5aa7eb90-52fd-4c4b-8f1a-e70fed4c753d",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 902,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "df128ed3-ae24-4bf8-b440-2a6c39774b26",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 971,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "0334da65-d3d9-4bf7-9132-b7b84d83e1fc",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "fd49eba5-ea76-4755-9e25-739b25abd035",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "979416a7-6340-4091-b463-8e82425e34f9",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "ed2910bc-8994-45e3-bd4f-99c05fdc4fbb",
              "parentUUID": "d3995ecd-f29f-4577-b9e0-aa9f8924ec17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "608c431a-f72a-47de-8304-940b8172ff94",
            "fbfb82b5-d116-4e4c-b229-21a0dfe077a5",
            "b7567f52-831d-4e5c-ba13-003969a9c167",
            "22f48502-6686-42e7-bde6-b1969de96866",
            "4bd1beb1-48aa-4d86-919c-08af46c1c48e",
            "9aed74e9-d38a-407f-9c5d-824e019da027",
            "e29e37a6-ccdb-418c-9eea-c54ea916265b",
            "24e50ad8-bdef-43b7-8cb1-e15153af4e43",
            "5aa7eb90-52fd-4c4b-8f1a-e70fed4c753d",
            "df128ed3-ae24-4bf8-b440-2a6c39774b26",
            "0334da65-d3d9-4bf7-9132-b7b84d83e1fc",
            "fd49eba5-ea76-4755-9e25-739b25abd035",
            "979416a7-6340-4091-b463-8e82425e34f9",
            "ed2910bc-8994-45e3-bd4f-99c05fdc4fbb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c2f57ec1-2658-443c-9291-ad14f924c368",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "614bcec6-0609-4329-874b-94d32f074a81",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "369841fc-5d81-4ee1-89e3-02c5c81f31bf",
              "parentUUID": "614bcec6-0609-4329-874b-94d32f074a81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "bcd5f055-6814-42d0-b749-ce4056090696",
              "parentUUID": "614bcec6-0609-4329-874b-94d32f074a81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "369841fc-5d81-4ee1-89e3-02c5c81f31bf",
            "bcd5f055-6814-42d0-b749-ce4056090696"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1339,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "26b6f33d-0172-4f7b-9f3f-3773e19f7096",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ccf487fe-487b-4424-8ace-d790e4bdd400",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "70b0a623-d2a0-4283-934f-1e448edbdb93",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 391,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "cde26ee9-3a5a-48e4-96df-c1e24ef4000b",
                  "parentUUID": "70b0a623-d2a0-4283-934f-1e448edbdb93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 112,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "6d43d5af-2510-4fd1-a70d-cc5085f9c7bb",
                  "parentUUID": "70b0a623-d2a0-4283-934f-1e448edbdb93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cde26ee9-3a5a-48e4-96df-c1e24ef4000b",
                "6d43d5af-2510-4fd1-a70d-cc5085f9c7bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 503,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d3fd119c-d98f-4920-942d-b32728de75f0",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 106,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "bfa89bce-624a-4a9b-afa8-d069c59c23e2",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "bfcfb465-9db8-4805-985f-709018c249f3",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 85,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "43f9b6ea-4fe1-4a1c-a4dc-f2d89ff8e791",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 100,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "ab94e936-317f-4450-b1d4-e752f5070236",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 117,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "49f2f8ab-72ad-4e8b-9756-96e2e688ec35",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 95,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "3afe3c84-b3b4-41dc-a928-b5070dfb4f91",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1582,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "9973fde4-fcd5-4eb9-9c3e-edb1bd3b1696",
                  "parentUUID": "d3fd119c-d98f-4920-942d-b32728de75f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bfa89bce-624a-4a9b-afa8-d069c59c23e2",
                "bfcfb465-9db8-4805-985f-709018c249f3",
                "43f9b6ea-4fe1-4a1c-a4dc-f2d89ff8e791",
                "ab94e936-317f-4450-b1d4-e752f5070236",
                "49f2f8ab-72ad-4e8b-9756-96e2e688ec35",
                "3afe3c84-b3b4-41dc-a928-b5070dfb4f91",
                "9973fde4-fcd5-4eb9-9c3e-edb1bd3b1696"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2202,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2373871d-98d7-4739-ad87-029dcbd9e3c3",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f326f216-f878-4877-adba-52de2e3cf9b7",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "ce60a223-d577-41f6-8c12-a1ba9be6d220",
              "parentUUID": "f326f216-f878-4877-adba-52de2e3cf9b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "e294c470-8552-4921-8414-4231cd4c1674",
              "parentUUID": "f326f216-f878-4877-adba-52de2e3cf9b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "174ac563-91be-4138-99ed-090db17fe708",
              "parentUUID": "f326f216-f878-4877-adba-52de2e3cf9b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "10cbf4ea-6313-49a4-aa6e-8649db79a959",
              "parentUUID": "f326f216-f878-4877-adba-52de2e3cf9b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a778405a-071a-48c5-9199-4ad75dba4369",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 97,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "fc4f4820-bc9c-422c-882d-d9df2d141fb8",
                  "parentUUID": "a778405a-071a-48c5-9199-4ad75dba4369",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 88,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "805aa1a8-f769-4ebe-a1de-acb0aa5de85f",
                  "parentUUID": "a778405a-071a-48c5-9199-4ad75dba4369",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 124,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "4552fc55-31a1-484c-9d64-c7a358d5b66e",
                  "parentUUID": "a778405a-071a-48c5-9199-4ad75dba4369",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 103,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "01f9cf91-8f04-4ccf-a18a-3f381fcb5144",
                  "parentUUID": "a778405a-071a-48c5-9199-4ad75dba4369",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc4f4820-bc9c-422c-882d-d9df2d141fb8",
                "805aa1a8-f769-4ebe-a1de-acb0aa5de85f",
                "4552fc55-31a1-484c-9d64-c7a358d5b66e",
                "01f9cf91-8f04-4ccf-a18a-3f381fcb5144"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 412,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "ce60a223-d577-41f6-8c12-a1ba9be6d220",
            "e294c470-8552-4921-8414-4231cd4c1674",
            "174ac563-91be-4138-99ed-090db17fe708",
            "10cbf4ea-6313-49a4-aa6e-8649db79a959"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5c7161be-2944-438a-a768-c303a6c7c553",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1e4fb6eb-02de-47e9-a6e5-4043cb67b7e9",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "4d9db3c3-1c7a-4e69-aef3-15860d03e5b4",
              "parentUUID": "1e4fb6eb-02de-47e9-a6e5-4043cb67b7e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "7f31e59a-944b-4375-9432-a2914aeb1573",
              "parentUUID": "1e4fb6eb-02de-47e9-a6e5-4043cb67b7e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "514a0473-477b-41d7-ba30-80b9d63b2f7e",
              "parentUUID": "1e4fb6eb-02de-47e9-a6e5-4043cb67b7e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "14e95879-e33a-4e94-a83b-78ef8b7cc269",
              "parentUUID": "1e4fb6eb-02de-47e9-a6e5-4043cb67b7e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "a6e8fa0f-8ff7-4e58-98c7-9d1861cc7b1e",
              "parentUUID": "1e4fb6eb-02de-47e9-a6e5-4043cb67b7e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d9db3c3-1c7a-4e69-aef3-15860d03e5b4",
            "7f31e59a-944b-4375-9432-a2914aeb1573",
            "514a0473-477b-41d7-ba30-80b9d63b2f7e",
            "14e95879-e33a-4e94-a83b-78ef8b7cc269",
            "a6e8fa0f-8ff7-4e58-98c7-9d1861cc7b1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3f6eecf4-aeee-42c2-93b7-2d6cca4e5b5a",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79d42625-dca7-4697-a0c2-a7b0101ba42a",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "e4ad7e0c-021a-4476-acc8-b258ee37b4ee",
              "parentUUID": "79d42625-dca7-4697-a0c2-a7b0101ba42a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4ad7e0c-021a-4476-acc8-b258ee37b4ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 301,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c85f83b7-9dd4-4f60-b739-8aeef47c1069",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "87580989-55ea-4e2e-9867-810fc7064a25",
              "parentUUID": "c85f83b7-9dd4-4f60-b739-8aeef47c1069",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "da1b87eb-8418-4716-a4ea-2fe97f0325fd",
              "parentUUID": "c85f83b7-9dd4-4f60-b739-8aeef47c1069",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "27116528-9e60-4be3-8202-7ca406f3afe9",
              "parentUUID": "c85f83b7-9dd4-4f60-b739-8aeef47c1069",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87580989-55ea-4e2e-9867-810fc7064a25",
            "da1b87eb-8418-4716-a4ea-2fe97f0325fd",
            "27116528-9e60-4be3-8202-7ca406f3afe9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "92df8ad9-0dd7-4b0b-8551-917266a72f6f",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "53ea86d6-e1ac-4cf4-9242-647c1b6eaa6d",
              "parentUUID": "92df8ad9-0dd7-4b0b-8551-917266a72f6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53ea86d6-e1ac-4cf4-9242-647c1b6eaa6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 86,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82ef8e1e-d157-49ff-83f2-841417a3a3e8",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (projectId, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'http://www.webdriveruniversity.com'",
                "estack": "AssertionError: expected { Object (projectId, setupNodeEvents, ...) } to have property 'baseUrl' of null, but got 'http://www.webdriveruniversity.com'\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress\\e2e\\2-advanced-examples\\cypress_api.cy.js:172:30)",
                "diff": null
              },
              "uuid": "8b66417e-8cf9-411e-a42c-452340224c1a",
              "parentUUID": "82ef8e1e-d157-49ff-83f2-841417a3a3e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8b66417e-8cf9-411e-a42c-452340224c1a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "98672fa7-c861-420d-b109-8266508338c0",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "6d254fe9-817b-4833-98ef-6386155a654a",
              "parentUUID": "98672fa7-c861-420d-b109-8266508338c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d254fe9-817b-4833-98ef-6386155a654a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7de90206-0bdc-4f7f-8098-7576107efb63",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "9d44ae01-fa34-4d6d-a16d-df2d32220d83",
              "parentUUID": "7de90206-0bdc-4f7f-8098-7576107efb63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d44ae01-fa34-4d6d-a16d-df2d32220d83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 111,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "878a95e6-b14b-45fd-aa5d-1f2bec92786e",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "c25472e2-145a-4ae2-864f-3761691759ae",
              "parentUUID": "878a95e6-b14b-45fd-aa5d-1f2bec92786e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c25472e2-145a-4ae2-864f-3761691759ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "56c7ff2d-ed23-41e8-a349-bb7bcf6bab78",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "be64be4e-d345-42ad-9293-5a3d24cd203d",
              "parentUUID": "56c7ff2d-ed23-41e8-a349-bb7bcf6bab78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be64be4e-d345-42ad-9293-5a3d24cd203d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "33bd413c-1317-4f31-ba5b-ca1b67b728fc",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "e5ce6798-0528-42d1-aa45-3366fc137333",
              "parentUUID": "33bd413c-1317-4f31-ba5b-ca1b67b728fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5ce6798-0528-42d1-aa45-3366fc137333"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 90,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9328c931-0647-4143-b938-e844fb3e59ce",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "11bf14e8-bf7d-49a1-a2cc-3935ac5ca2d9",
              "parentUUID": "9328c931-0647-4143-b938-e844fb3e59ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11bf14e8-bf7d-49a1-a2cc-3935ac5ca2d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fd006908-034f-4526-b1b9-8dc65c1faa0b",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\files.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82b1dfb7-7274-427f-87bd-8c5b1c96d91c",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 422,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "51000df4-1cf0-4f19-9171-00edbba8919d",
              "parentUUID": "82b1dfb7-7274-427f-87bd-8c5b1c96d91c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "a35acb82-2cc7-439a-baaf-cfc5bf3e5f6a",
              "parentUUID": "82b1dfb7-7274-427f-87bd-8c5b1c96d91c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(Cypress.config('configFile')).then(config => {\n  expect(config).to.be.an('string');\n});",
              "err": {},
              "uuid": "28151007-e743-4ecd-a27f-495f0ff2bd34",
              "parentUUID": "82b1dfb7-7274-427f-87bd-8c5b1c96d91c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "ae009343-b3f0-4788-baa4-aa5a052d5745",
              "parentUUID": "82b1dfb7-7274-427f-87bd-8c5b1c96d91c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51000df4-1cf0-4f19-9171-00edbba8919d",
            "a35acb82-2cc7-439a-baaf-cfc5bf3e5f6a",
            "28151007-e743-4ecd-a27f-495f0ff2bd34",
            "ae009343-b3f0-4788-baa4-aa5a052d5745"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 943,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a7ffe326-801e-4a50-b4da-da5723f50b32",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\local_storage.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\local_storage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6434bdf6-4f3f-4722-9d2d-1a133c445774",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // Clear key matching string in Local Storage\ncy.clearLocalStorage('prop1').should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.clearLocalStorage(/prop1|2/).should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://example.cypress.io/commands/local-storage\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Local Storage`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://example.cypress.io/commands/local-storage\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Local Storage`\n    at http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:142094:84\n    at visitFailedByErr (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:141413:12)\n    at http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:142074:13\n    at tryCatcher (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9431:18)\n    at _drainQueueStep (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://www.webdriveruniversity.com/__cypress/tests?p=cypress\\e2e\\2-advanced-examples\\local_storage.cy.js:102:8)",
                "diff": null
              },
              "uuid": "a74abbdf-4b05-4ae6-93f3-c49c6025df04",
              "parentUUID": "6434bdf6-4f3f-4722-9d2d-1a133c445774",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a74abbdf-4b05-4ae6-93f3-c49c6025df04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0085c2f1-2446-457d-9c24-ee102a86e4b3",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96f626e4-b121-4730-b831-7559e59eb2e9",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "8636593a-5dc3-4be0-91db-267643f422a0",
              "parentUUID": "96f626e4-b121-4730-b831-7559e59eb2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "a1a07f2c-d309-4070-9449-f01ae8adb611",
              "parentUUID": "96f626e4-b121-4730-b831-7559e59eb2e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "4eedec5e-a491-4924-88de-f95be052911d",
              "parentUUID": "96f626e4-b121-4730-b831-7559e59eb2e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8636593a-5dc3-4be0-91db-267643f422a0",
            "a1a07f2c-d309-4070-9449-f01ae8adb611",
            "4eedec5e-a491-4924-88de-f95be052911d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "889ac117-5215-4465-be8b-643c04e4e3bb",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "24c00fc2-1c3d-4abf-9e7f-4727d60ddbd7",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 531,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "35b70695-b520-441c-8514-6fa9380c6577",
              "parentUUID": "24c00fc2-1c3d-4abf-9e7f-4727d60ddbd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "5496822e-df76-474e-8403-7e02d2422a71",
              "parentUUID": "24c00fc2-1c3d-4abf-9e7f-4727d60ddbd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "1ae892ae-66b3-4bc6-ab73-121e56f6a3b6",
              "parentUUID": "24c00fc2-1c3d-4abf-9e7f-4727d60ddbd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "3f3db5d8-2e4c-40f4-81c5-12d0eb5c5c28",
              "parentUUID": "24c00fc2-1c3d-4abf-9e7f-4727d60ddbd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "56b31c9a-2b23-490b-9ee7-9d9f39051bb1",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 941,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "ce9868b3-3ea6-4f6e-b206-ef8b7ca824a4",
                  "parentUUID": "56b31c9a-2b23-490b-9ee7-9d9f39051bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 100,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "af6e54a7-eda0-4ff2-b95e-d28bc09c1fe0",
                  "parentUUID": "56b31c9a-2b23-490b-9ee7-9d9f39051bb1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ce9868b3-3ea6-4f6e-b206-ef8b7ca824a4",
                "af6e54a7-eda0-4ff2-b95e-d28bc09c1fe0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1041,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "35b70695-b520-441c-8514-6fa9380c6577",
            "5496822e-df76-474e-8403-7e02d2422a71",
            "1ae892ae-66b3-4bc6-ab73-121e56f6a3b6",
            "3f3db5d8-2e4c-40f4-81c5-12d0eb5c5c28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b2592a06-cb3d-47d2-a150-67c8a89cf7c9",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce27863d-a232-4861-b103-948c840e081d",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 959,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "d3164509-c723-4c02-9d70-609858aed6ac",
              "parentUUID": "ce27863d-a232-4861-b103-948c840e081d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "0301741b-5499-4ea3-ad5b-1c691759ab8b",
              "parentUUID": "ce27863d-a232-4861-b103-948c840e081d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "951e7c3e-a55a-4b96-a03f-7083dfe93d4a",
              "parentUUID": "ce27863d-a232-4861-b103-948c840e081d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3164509-c723-4c02-9d70-609858aed6ac",
            "0301741b-5499-4ea3-ad5b-1c691759ab8b",
            "951e7c3e-a55a-4b96-a03f-7083dfe93d4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fc7d1f1c-f48e-4b6b-aee3-c541768b7900",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\network_requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22128361-eea5-4d35-8933-1aff0f14c9fa",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 851,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "edd373d1-f14d-4e12-9a53-5c67c6458ceb",
              "parentUUID": "22128361-eea5-4d35-8933-1aff0f14c9fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 527,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "1eeb15c8-b19a-4a61-b761-8a091e0ebba3",
              "parentUUID": "22128361-eea5-4d35-8933-1aff0f14c9fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "1ca2ff36-fd94-4328-923d-a51d7b3ada07",
              "parentUUID": "22128361-eea5-4d35-8933-1aff0f14c9fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "ebd4dafe-f82a-4a1a-a180-791c7cafece9",
              "parentUUID": "22128361-eea5-4d35-8933-1aff0f14c9fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 588,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "d29bc5a1-b42d-41f7-8710-3112d3f664db",
              "parentUUID": "22128361-eea5-4d35-8933-1aff0f14c9fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1541,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "63a37659-04c4-49e7-889f-8089cb8a0a02",
              "parentUUID": "22128361-eea5-4d35-8933-1aff0f14c9fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edd373d1-f14d-4e12-9a53-5c67c6458ceb",
            "1eeb15c8-b19a-4a61-b761-8a091e0ebba3",
            "1ca2ff36-fd94-4328-923d-a51d7b3ada07",
            "ebd4dafe-f82a-4a1a-a180-791c7cafece9",
            "d29bc5a1-b42d-41f7-8710-3112d3f664db",
            "63a37659-04c4-49e7-889f-8089cb8a0a02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4444,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "505f90b9-7a26-463a-a5c7-cee3fa2a0fef",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e187d2f8-398f-44d5-85d3-53e90d3326f9",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "d193befe-a7b8-46c6-a49d-bfbc2b50b06a",
              "parentUUID": "e187d2f8-398f-44d5-85d3-53e90d3326f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "a53c2fe6-ebc9-4d41-b37e-6cefaa3bd620",
              "parentUUID": "e187d2f8-398f-44d5-85d3-53e90d3326f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "290907bd-748d-4180-99f3-8c5e12398fe8",
              "parentUUID": "e187d2f8-398f-44d5-85d3-53e90d3326f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "98737461-f118-4984-abb2-a43c0fd61ec2",
              "parentUUID": "e187d2f8-398f-44d5-85d3-53e90d3326f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 690,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "503b22d7-901a-4efb-a1c5-a6d982e53799",
              "parentUUID": "e187d2f8-398f-44d5-85d3-53e90d3326f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d193befe-a7b8-46c6-a49d-bfbc2b50b06a",
            "a53c2fe6-ebc9-4d41-b37e-6cefaa3bd620",
            "290907bd-748d-4180-99f3-8c5e12398fe8",
            "98737461-f118-4984-abb2-a43c0fd61ec2",
            "503b22d7-901a-4efb-a1c5-a6d982e53799"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "11c6afd3-fd02-47a8-bcd4-eb427f497db8",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\spies_stubs_clocks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "61ef1574-72fc-466d-b4ea-6acb07d90838",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2534,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "256828c5-2069-4fa3-a089-a77a2963e3f6",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "f4f7c38f-9ada-4fd2-a62e-99f07ce3d206",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "37fa6f57-9490-4f3d-96ad-62d66b3d1a4f",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "70dc5685-bf16-4837-941a-b8432fbf63d9",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "be812465-79db-48cd-81bc-54e1f9360c1a",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is even\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nconst isLessThan = limit => x => x < limit; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "66ddd0bc-34e3-43ea-91eb-07972af8af3a",
              "parentUUID": "c54551f6-e62c-450d-be5f-ddecb7b0b109",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61ef1574-72fc-466d-b4ea-6acb07d90838",
            "256828c5-2069-4fa3-a089-a77a2963e3f6",
            "f4f7c38f-9ada-4fd2-a62e-99f07ce3d206",
            "37fa6f57-9490-4f3d-96ad-62d66b3d1a4f",
            "70dc5685-bf16-4837-941a-b8432fbf63d9",
            "be812465-79db-48cd-81bc-54e1f9360c1a",
            "66ddd0bc-34e3-43ea-91eb-07972af8af3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3432,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e2d23865-b330-4de6-a2af-d469f8bb30ca",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\traversal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "6846db4c-64ab-41bc-bf5d-ae6be990e832",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "94af4892-c76f-440c-9365-4ad9847eb70c",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "23169f5b-f65e-4866-8829-04d8a3c20e4a",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "31327e32-bfd3-4c77-ad31-56459696cd06",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "9b4be2cb-d99c-4f83-856e-011bd822446e",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "d06890c7-6ee0-44e8-a13c-3ae445520a26",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "4607b487-7714-4c4f-8207-9094571b85c7",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "1bb5d21a-6f64-4d17-bba8-467e80805d8f",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "7c519c60-77f5-433b-bd15-1d8d902fe201",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "0a21ea95-48eb-47e3-8872-996dd5df2587",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "db28a36b-840c-483b-8c0e-fdbcd1b0860f",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "91a44e0c-d785-488f-a203-2c4f8b8dbed2",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "96388127-1d3d-4185-958f-61f4ea5c2bd1",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "330b9b71-91b0-47d0-84e9-b9db3d67e77d",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "d0859e79-296d-46c6-b39e-2b8fadaeee79",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "0d54a178-46fb-41aa-ba02-260ad53c77fd",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "8b0612ab-a487-490d-85b1-4495059e89e4",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "0aaf15a2-ef5f-47cf-ac47-b33902bc575a",
              "parentUUID": "d871164a-1fe5-47dd-8316-3fc316b3b53b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6846db4c-64ab-41bc-bf5d-ae6be990e832",
            "94af4892-c76f-440c-9365-4ad9847eb70c",
            "23169f5b-f65e-4866-8829-04d8a3c20e4a",
            "31327e32-bfd3-4c77-ad31-56459696cd06",
            "9b4be2cb-d99c-4f83-856e-011bd822446e",
            "d06890c7-6ee0-44e8-a13c-3ae445520a26",
            "4607b487-7714-4c4f-8207-9094571b85c7",
            "1bb5d21a-6f64-4d17-bba8-467e80805d8f",
            "7c519c60-77f5-433b-bd15-1d8d902fe201",
            "0a21ea95-48eb-47e3-8872-996dd5df2587",
            "db28a36b-840c-483b-8c0e-fdbcd1b0860f",
            "91a44e0c-d785-488f-a203-2c4f8b8dbed2",
            "96388127-1d3d-4185-958f-61f4ea5c2bd1",
            "330b9b71-91b0-47d0-84e9-b9db3d67e77d",
            "d0859e79-296d-46c6-b39e-2b8fadaeee79",
            "0d54a178-46fb-41aa-ba02-260ad53c77fd",
            "8b0612ab-a487-490d-85b1-4495059e89e4",
            "0aaf15a2-ef5f-47cf-ac47-b33902bc575a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2305,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "94f54a90-5d7c-41aa-b0eb-84594458dffc",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\utilities.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4c72e7f-52b5-470d-98d1-88b2533c3465",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 519,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "104d446d-8031-48b5-94d5-6dab4185b4e1",
              "parentUUID": "a4c72e7f-52b5-470d-98d1-88b2533c3465",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "65f027a6-130c-45ac-8442-99af7261c0c7",
              "parentUUID": "a4c72e7f-52b5-470d-98d1-88b2533c3465",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "00accbe1-57b9-4ea6-b82c-7e28b5fb9f48",
              "parentUUID": "a4c72e7f-52b5-470d-98d1-88b2533c3465",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "ad2c1786-2931-4520-8b7d-7974fc4702a6",
              "parentUUID": "a4c72e7f-52b5-470d-98d1-88b2533c3465",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "a65fdf12-275e-42b5-ae0d-2f14b954a550",
              "parentUUID": "a4c72e7f-52b5-470d-98d1-88b2533c3465",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "104d446d-8031-48b5-94d5-6dab4185b4e1",
            "65f027a6-130c-45ac-8442-99af7261c0c7",
            "00accbe1-57b9-4ea6-b82c-7e28b5fb9f48",
            "ad2c1786-2931-4520-8b7d-7974fc4702a6",
            "a65fdf12-275e-42b5-ae0d-2f14b954a550"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fc9339ec-840c-4aa8-a517-0b06f7ccdab4",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\viewport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc87180d-98fa-4c94-abab-2d3d5659fccf",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.config.{js|ts})",
              "err": {},
              "uuid": "a499f240-50d9-4cd0-bb95-fa8cdf4a70ae",
              "parentUUID": "cc87180d-98fa-4c94-abab-2d3d5659fccf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a499f240-50d9-4cd0-bb95-fa8cdf4a70ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "009b2645-0750-41d8-8daa-5d5c1deeba7d",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\waiting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c945811-90eb-40cb-af14-044faa9e50fe",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "18650909-a6a2-4571-b158-4667ecfc6c69",
              "parentUUID": "4c945811-90eb-40cb-af14-044faa9e50fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "466feb9b-5c2a-4f56-bda8-4567e04d915e",
              "parentUUID": "4c945811-90eb-40cb-af14-044faa9e50fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18650909-a6a2-4571-b158-4667ecfc6c69",
            "466feb9b-5c2a-4f56-bda8-4567e04d915e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5187,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b91f0524-f831-4c22-acad-916f05795eb7",
      "title": "",
      "fullFile": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "file": "cypress\\e2e\\2-advanced-examples\\window.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1625e9bf-9313-445f-ba78-baa86a07c204",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "d5e3aa42-97f1-4895-a6c2-f028ea3ec785",
              "parentUUID": "1625e9bf-9313-445f-ba78-baa86a07c204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "3118d07a-5b32-4057-9d9f-fda175d1f11a",
              "parentUUID": "1625e9bf-9313-445f-ba78-baa86a07c204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "a270968b-7e88-4b8b-93a5-893946d9716e",
              "parentUUID": "1625e9bf-9313-445f-ba78-baa86a07c204",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5e3aa42-97f1-4895-a6c2-f028ea3ec785",
            "3118d07a-5b32-4057-9d9f-fda175d1f11a",
            "a270968b-7e88-4b8b-93a5-893946d9716e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 448,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b458edf3-e096-490c-a763-74dfc452996e",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\add-multiple-items-to-basket.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\add-multiple-items-to-basket.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "655333b7-beca-44e1-af08-e3543d34e46e",
          "title": "Add multiple items to basket",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add specific items to basket",
              "fullTitle": "Add multiple items to basket Add specific items to basket",
              "timedOut": null,
              "duration": 3799,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* globalThis.data.productName.forEach(function(element) { //Vamos a ir .json de products y vamos a iterar por todos los elementos\n     cy.addProductToBasket(element) //Ya hacemos llamada al commands con dichos elementos.\n })\n cy.get('.dropdown-toggle >.fa').click() //.fa para diferenciar entre otros botones .dropdown-toggle*/\nautoStore_HairCare.addHairCareProductToBasket();",
              "err": {},
              "uuid": "20377392-b4e5-4cd4-8fc8-87dc66c5d88d",
              "parentUUID": "655333b7-beca-44e1-af08-e3543d34e46e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20377392-b4e5-4cd4-8fc8-87dc66c5d88d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3799,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "086dff7f-e361-4799-9536-b3c41bd2b0e8",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\alias-invoke_FINAL-Precios.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\alias-invoke_FINAL-Precios.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca1adb2d-06ba-436d-b2d7-9613c314e01f",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 1664,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.thumbnail').as('productThumbnail'); // cy.get('@productThumbnail').find('.oneprice').each(($el, index, $list) => {\n//     cy.log($el.text()); --> muestra por pantalla todos los precios de los productos que hay.\n// });\ncy.get('.thumbnail').find('.oneprice').invoke('text').as('itemPrice'); //Aquí tendremos el precio \ncy.get('.thumbnail').find('.pricenew').invoke('text').as('saleItemPrice'); //Precio descuento\nvar itemsTotal = 0;\ncy.get('@itemPrice').then($linkText => {\n  var itemsPriceTotal = 0;\n  var itemPrice = $linkText.split('$'); //\"Cortamos\" por el simbolo para solo tener el numero del precio\n  var i;\n  for (i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    itemsPriceTotal += Number(itemPrice[i]);\n  }\n  itemsTotal += itemsPriceTotal;\n  cy.log(\"Non sale price items total: \" + itemsPriceTotal); //Suma de todos los precios\n});\ncy.get('@saleItemPrice').then($linkText => {\n  var saleItemsPrice = 0;\n  var saleItemPrice = $linkText.split('$');\n  var i;\n  for (i = 0; i < saleItemPrice.length; i++) {\n    cy.log(saleItemPrice[i]);\n    saleItemsPrice += Number(saleItemPrice[i]);\n  }\n  itemsTotal += saleItemsPrice;\n  cy.log(\"Sale price items total: \" + saleItemsPrice); //Suma de precios con descuento\n}).then(() => {\n  cy.log(\"The total price of all products: \" + itemsTotal);\n  expect(itemsTotal).to.equal(639.49);\n});",
              "err": {},
              "uuid": "f996bc9d-2007-436a-b2e2-f08bb63bedcd",
              "parentUUID": "ca1adb2d-06ba-436d-b2d7-9613c314e01f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f996bc9d-2007-436a-b2e2-f08bb63bedcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1664,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aaedddce-9ed4-4f17-a53e-a589dfd0f224",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\alias-invoke_FINAL.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\alias-invoke_FINAL.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f36e67ef-916f-444b-a8a5-94b2d239496d",
          "title": "Alias and invoke",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate product thumbnail",
              "fullTitle": "Alias and invoke Validate product thumbnail",
              "timedOut": null,
              "duration": 1817,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get('.thumbnail').as('productThumbnail');\ncy.get('@productThumbnail').should('have.length', 16);\ncy.get('@productThumbnail').find('.productcart').invoke('attr', 'title').should('include', 'Add to Cart');",
              "err": {},
              "uuid": "89eb03b3-6a2e-455e-b6a7-aa1a21d93e9d",
              "parentUUID": "f36e67ef-916f-444b-a8a5-94b2d239496d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89eb03b3-6a2e-455e-b6a7-aa1a21d93e9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3ee49988-af6b-4365-bbef-d55ecc968018",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11d076e8-98cb-480e-9ba0-bd55276334b5",
          "title": "Test Contact Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via Automation Test Store Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 5515,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com\"); //cy.get('.info_links_footer > :nth-child(5) > a').click()\ncy.get(\"a[href$='contact']\").click().then(function (linkText) {\n  //Si pulsamos botón derecho y \"Selector actions\" podemos tener el selector rápido.\n  cy.log(\"Clicked on link using text: \" + linkText.text());\n}); //cy.xpath(\"//a[contains(@href, 'contact')]\").click()\ncy.get(\"@user\").then(user => {\n  cy.get('#ContactUsFrm_first_name').type(user.first_name);\n  cy.get('#ContactUsFrm_email').type(user.email);\n});\ncy.get('#ContactUsFrm_email').should('have.attr', 'name', 'email');\ncy.get('#ContactUsFrm_enquiry').type(\"Do you provide additional discount on bulk \"); //cy.get('.col-md-6 > .btn').click()\ncy.get(\"button[title='Submit']\").click(); // Selector --> mejor forma.\ncy.get('.mb40 > :nth-child(3)').should('have.text', 'Your enquiry has been successfully sent to the store owner!');\ncy.log(\"Test completed!\");",
              "err": {},
              "uuid": "1e442173-aabb-47e9-b9c8-c4a5be9f8a12",
              "parentUUID": "11d076e8-98cb-480e-9ba0-bd55276334b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e442173-aabb-47e9-b9c8-c4a5be9f8a12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5515,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5e0570cb-190c-4719-824f-13d0eead7871",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\iterate-over-elements_FINAL (1).js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\iterate-over-elements_FINAL (1).js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5aba8baa-8e6f-4e13-ae9c-5dddde2a98ca",
          "title": "Iterate over elements",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all hair care products",
              "fullTitle": "Iterate over elements Log information of all hair care products",
              "timedOut": null,
              "duration": 1928,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".fixed_wrapper .prdocutname\").each(($el, index, $list) => {\n  cy.log(\"Index: \" + index + \" : \" + $el.text());\n});",
              "err": {},
              "uuid": "8cdaa519-4cc4-4a6a-82c6-22f17737aa75",
              "parentUUID": "5aba8baa-8e6f-4e13-ae9c-5dddde2a98ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over elements Add specific product to basket",
              "timedOut": null,
              "duration": 1013,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* cy.get(\".fixed_wrapper .prdocutname\").each(($el, index, $list) => {\n     if($el.text().includes('Curls to straight Shampoo')) {\n         cy.wrap($el).click()\n     }\n });*/\ncy.selectProduct('Curls to straight Shampoo');",
              "err": {},
              "uuid": "c8b0185a-fe77-4448-a579-963495960456",
              "parentUUID": "5aba8baa-8e6f-4e13-ae9c-5dddde2a98ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add nother specific product to basket",
              "fullTitle": "Iterate over elements Add nother specific product to basket",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Skinsheen Bronzer Stick');",
              "err": {},
              "uuid": "24e04502-40fb-4dec-9e3a-f272baa773ee",
              "parentUUID": "5aba8baa-8e6f-4e13-ae9c-5dddde2a98ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add nother specific product to basket 2",
              "fullTitle": "Iterate over elements Add nother specific product to basket 2",
              "timedOut": null,
              "duration": 782,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct('Pantene Pro-V Conditioner, Classic Care');",
              "err": {},
              "uuid": "ff3c9f8f-5dd0-40ed-944a-dc2d13b1bcb4",
              "parentUUID": "5aba8baa-8e6f-4e13-ae9c-5dddde2a98ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8cdaa519-4cc4-4a6a-82c6-22f17737aa75",
            "c8b0185a-fe77-4448-a579-963495960456",
            "24e04502-40fb-4dec-9e3a-f272baa773ee",
            "ff3c9f8f-5dd0-40ed-944a-dc2d13b1bcb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "02776c63-df9d-4893-920d-c5afd1dff569",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\integration\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "23ebd63f-7266-425c-8c24-b056d54c7c6b",
          "title": "Verifying variables, cypress commands and jquery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate properties of the Contact US pages",
              "fullTitle": "Verifying variables, cypress commands and jquery commands Validate properties of the Contact US pages",
              "timedOut": null,
              "duration": 1363,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/index.php?rt=content/contact\"); // Uses cypress command and chaining\ncy.contains('#ContactUsFrm', 'Contact Us Form').find('#field_11').should('contain', 'First name'); //--> id, nombre\n//JQuery Approach\ncy.contains('#ContactUsFrm', 'Contact Us Form').then(text => {\n  const firstNameText = text.find('#field_11').text();\n  expect(firstNameText).to.contain('First name'); // en este caso no podemos poner is.eq por que no tenemos los : puestos por tanto \n  //no sería igual y empleamos contain\n  //Embedded commands (Closure)\n  cy.get('#field_11').then(fnText => {\n    cy.log(fnText.text());\n    cy.log(fnText);\n  });\n});",
              "err": {},
              "uuid": "9c2016c8-e348-44b7-94ee-42b9a5c68bc1",
              "parentUUID": "23ebd63f-7266-425c-8c24-b056d54c7c6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c2016c8-e348-44b7-94ee-42b9a5c68bc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5885fb1-998e-46d1-9989-3b371f051a5c",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\other\\hooks.js",
      "file": "cypress\\e2e\\integration\\other\\hooks.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7492cec0-5de5-4acc-ac5f-267042935482",
          "title": "Hooks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Example test1",
              "fullTitle": "Hooks Example test1",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(\"Example test1!\");",
              "err": {},
              "uuid": "0a9c9e94-ed55-461a-9149-a8239987f444",
              "parentUUID": "7492cec0-5de5-4acc-ac5f-267042935482",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Example test2",
              "fullTitle": "Hooks Example test2",
              "timedOut": null,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(\"Example test2!\");",
              "err": {},
              "uuid": "f3ba2802-d54f-41ec-8f5b-8e78347eff1a",
              "parentUUID": "7492cec0-5de5-4acc-ac5f-267042935482",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a9c9e94-ed55-461a-9149-a8239987f444",
            "f3ba2802-d54f-41ec-8f5b-8e78347eff1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 85,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "370a948f-ad79-442b-b289-710bb7cad481",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\other\\same-origin-policy.js",
      "file": "cypress\\e2e\\integration\\other\\same-origin-policy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ffe17ae7-faf0-4bcd-b77a-56f9995effb4",
          "title": "Cypress web security",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate visiting two different domains",
              "fullTitle": "Cypress web security Validate visiting two different domains",
              "timedOut": null,
              "duration": 1413,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//No podemos visitar dos dominios diferentes\ncy.visit('http://www.webdriveruniversity.com/');\ncy.visit('https://automationteststore.com/');",
              "err": {
                "message": "CypressError: `cy.visit()` failed because you are attempting to visit a URL that is of a different origin.\n\nYou likely forgot to use `cy.origin()`:\n\n`cy.visit('http://www.webdriveruniversity.com/')`\n`<commands targeting http://www.webdriveruniversity.com go here>`\n\n`cy.origin('https://automationteststore.com', () => {`\n`  cy.visit('https://automationteststore.com/')`\n`  <commands targeting https://automationteststore.com go here>`\n`})`\n\nThe new URL is considered a different origin because the following parts of the URL are different:\n\n  > protocol, superdomain\n\nYou may only `cy.visit()` same-origin URLs within a single test.\n\nThe previous URL you visited was:\n\n  > 'http://www.webdriveruniversity.com'\n\nYou're attempting to visit this URL:\n\n  > 'https://automationteststore.com'\n\nhttps://on.cypress.io/cannot-visit-different-origin-domain",
                "estack": "CypressError: `cy.visit()` failed because you are attempting to visit a URL that is of a different origin.\n\nYou likely forgot to use `cy.origin()`:\n\n`cy.visit('http://www.webdriveruniversity.com/')`\n`<commands targeting http://www.webdriveruniversity.com go here>`\n\n`cy.origin('https://automationteststore.com', () => {`\n`  cy.visit('https://automationteststore.com/')`\n`  <commands targeting https://automationteststore.com go here>`\n`})`\n\nThe new URL is considered a different origin because the following parts of the URL are different:\n\n  > protocol, superdomain\n\nYou may only `cy.visit()` same-origin URLs within a single test.\n\nThe previous URL you visited was:\n\n  > 'http://www.webdriveruniversity.com'\n\nYou're attempting to visit this URL:\n\n  > 'https://automationteststore.com'\n\nhttps://on.cypress.io/cannot-visit-different-origin-domain\n    at cannotVisitDifferentOrigin (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:140999:72)\n    at http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:142019:20\n    at tryCatcher (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://www.webdriveruniversity.com/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://www.webdriveruniversity.com/__cypress/tests?p=cypress\\e2e\\integration\\other\\same-origin-policy.js:104:8)",
                "diff": null
              },
              "uuid": "9048a3e1-3de5-4192-b243-29fde28e4cc0",
              "parentUUID": "ffe17ae7-faf0-4bcd-b77a-56f9995effb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate visiting two different domains via user actions",
              "fullTitle": "Cypress web security Validate visiting two different domains via user actions",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Error si no se ha activado chromeWebSecurity: false en cypress.config\ncy.visit('http://www.webdriveruniversity.com/');\ncy.get('#automation-test-store').invoke('removeAttr', 'target').click();",
              "err": {},
              "uuid": "7fdbb5a2-d318-4953-9469-a7ecba62c1ec",
              "parentUUID": "ffe17ae7-faf0-4bcd-b77a-56f9995effb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Origin command",
              "fullTitle": "Cypress web security Origin command",
              "timedOut": null,
              "duration": 3158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Si \n/* cy.origin('Webdriveruniversity.com', () => {\n     cy.visit(\"/\");\n })\n   cy.origin('automationteststore.com', () => {\n     cy.visit(\"/\");\n })*/\ncy.visit('http://www.webdriveruniversity.com/');\ncy.visit('http://selectors.webdriveruniversity.com/');",
              "err": {},
              "uuid": "ad67a881-beec-4d8e-bcba-9a9bfc7db89f",
              "parentUUID": "ffe17ae7-faf0-4bcd-b77a-56f9995effb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fdbb5a2-d318-4953-9469-a7ecba62c1ec",
            "ad67a881-beec-4d8e-bcba-9a9bfc7db89f"
          ],
          "failures": [
            "9048a3e1-3de5-4192-b243-29fde28e4cc0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4986,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cda56ae3-0a6a-4dbb-8651-a9205d8d0471",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\autocomplate-dropdrown-list.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\autocomplate-dropdrown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7ca32ba1-3407-4028-8043-c589b40c3e18",
          "title": "Verify autocomplate dropdown lists via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product",
              "fullTitle": "Verify autocomplate dropdown lists via webdriveruni Select specific product",
              "timedOut": null,
              "duration": 1710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#myInput').type('A'); //Poner A en el campo de texto\ncy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n  //Iteramos por todos los elementos del desplegable.\n  const prod = $el.text();\n  const productToSelect = 'Apple';\n  if (prod == productToSelect) {\n    //$el.click(); //Seleccionamos la opcion en el desplegable\n    $el.trigger('click');\n    cy.get('#submit-button').click();\n    cy.url().should('include', productToSelect);\n  }\n}).then(() => {\n  //Realizar la prueba sin tener que hacer otro caso de pruebas.\n  cy.get('#myInput').type('G'); //Poner G en el campo de texto\n  cy.get('#myInputautocomplete-list > *').each(($el, index, $list) => {\n    //Iteramos por todos los elementos del desplegable.\n    const prod = $el.text();\n    const productToSelect = 'Grapes';\n    if (prod == productToSelect) {\n      // $el.click(); //Seleccionamos la opcion en el desplegable\n      $el.trigger('click');\n      cy.get('#submit-button').click();\n      cy.url().should('include', productToSelect);\n    }\n  });\n});\n/* *** PARA ESTE CASO, HARÍA UN CASO DE PRUEBAS POR CADA LETRA, ES DECIR, CON LA A Y PONDRÍA TODAS LAS OPCIONES\nY LUEGO CON OTRA LETRA DISTINTA OTRO CASO DE PRUEBA.*** */",
              "err": {},
              "uuid": "eaf9ad91-f99b-4303-9b80-9cf5af6006c9",
              "parentUUID": "7ca32ba1-3407-4028-8043-c589b40c3e18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaf9ad91-f99b-4303-9b80-9cf5af6006c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6704cbb9-0891-4190-9ea9-9d892929f2fe",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\browser-navigation_FINAL-SECC 29 .js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\browser-navigation_FINAL-SECC 29 .js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b70e524e-9de2-4d4b-be54-9d6ae3eb38c4",
          "title": "Validate webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirm links redirect to the correct pages",
              "fullTitle": "Validate webdriveruni homepage links Confirm links redirect to the correct pages",
              "timedOut": null,
              "duration": 3085,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"/\");\ncy.get('#contact-us').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.reload(); //Recargar la página\ncy.url().should('include', \"/\"); //cy.reload(true) //reload without using cache\ncy.go('forward'); //Ir \"hacia delante\" en la página de contact US\ncy.url().should('include', 'contactus');\ncy.go('back');\ncy.get('#login-portal').invoke('removeAttr', 'target').click({\n  force: true\n}); //Vamos a la página de login\ncy.url().should('include', 'Login-Portal'); //Comprobamos que estamos en la correcta\ncy.go('back'); //Volvemos a la principal\n//cy.go('back') da error si dejamos este, porque ya estamos en la página principal desde de la otra operacion.\ncy.get('#to-do-list').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.url().should('include', 'To-Do-List');\ncy.go('back');",
              "err": {},
              "uuid": "0d9663e0-fef4-4caf-86ed-4cf8f948ede3",
              "parentUUID": "b70e524e-9de2-4d4b-be54-9d6ae3eb38c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d9663e0-fef4-4caf-86ed-4cf8f948ede3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec055870-6590-46c3-900d-a812cda6d529",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\checkboxes.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4e9ab4b-31b8-4ce9-8b5f-944205ac3c9b",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 685,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.get('#checkboxes > :nth-child(1) > input').check()\n//cy.get('#checkboxes > :nth-child(1) > input').check().should('be.checked')\ncy.get('#checkboxes > :nth-child(1) > input').as('option-1'); //Creamos alias\n//cy.get('@option-1').check()\ncy.get('@option-1').check().should('be.checked');",
              "err": {},
              "uuid": "00de599f-cbc3-4163-b62a-b7e5d1528407",
              "parentUUID": "f4e9ab4b-31b8-4ce9-8b5f-944205ac3c9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Challenge",
              "fullTitle": "Verify checkboxes via webdriveruni Challenge",
              "timedOut": null,
              "duration": 10401,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(':nth-child(5) > input').as('option-3'); //Creamos alias\ncy.get('@option-3').uncheck().should('be.checked');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10050ms: expected '<input>' to be 'checked'",
                "estack": "AssertionError: Timed out retrying after 10050ms: expected '<input>' to be 'checked'\n    at Context.eval (http://www.webdriveruniversity.com/__cypress/tests?p=cypress\\e2e\\integration\\webdriver-uni\\checkboxes.js:118:35)",
                "diff": null
              },
              "uuid": "d0f044d4-395f-4a12-a1a4-e9706fa6fc4f",
              "parentUUID": "f4e9ab4b-31b8-4ce9-8b5f-944205ac3c9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple",
              "timedOut": null,
              "duration": 1206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type='checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should('be.checked');",
              "err": {},
              "uuid": "1fe66cde-22da-44d3-a4d3-0e0f44c0bba8",
              "parentUUID": "f4e9ab4b-31b8-4ce9-8b5f-944205ac3c9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00de599f-cbc3-4163-b62a-b7e5d1528407",
            "1fe66cde-22da-44d3-a4d3-0e0f44c0bba8"
          ],
          "failures": [
            "d0f044d4-395f-4a12-a1a4-e9706fa6fc4f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12292,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "27f4fb24-109b-4809-a96b-9d1eb075c6d3",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\contact-us.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8f9491a8-13b5-428f-a571-2cd4117104d4",
          "title": "Test Contact Us form via WebDriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via WebDriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 6073,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should('have.property', 'charset').and('eq', 'UTF-8');\ncy.title().should('include', 'WebDriver | Contact Us'); //include --> ver si en el titulo incluye la palabra deseada.\ncy.url().should('include', 'contactus'); // include --> comprobar si en la url contiene una palabra\n//cy.get('#contact-us').click()\n/*cy.get('[name=\"first_name\"]').type(data.first_name) // get --> en el apartado me introduce el nombre de \"Juanfran\"\ncy.get('[name=\"last_name\"]').type(data.last_name)\ncy.get('[name=\"email\"]').type(data.email)\ncy.get('textarea.feedback-input').type(\"How can I learn Cypress?\")\ncy.get('[type=\"submit\"]').click({force:true});\ncy.get('h1').should('have.text', 'Thank You for your Message!')*/\n//Assertion --> Tienen un texto ... para verifcar el \"resultado esperado\"\n//cy.contactForm(Cypress.env(\"first_name\"), data.last_name, data.email, \"How can I learn Cypress?\", 'h1', 'Thank You for your Message!')\ncontact_Us_PO.contactForm_Submission(Cypress.env(\"first_name\"), data.last_name, data.email, \"How can I learn Cypress?\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "eb388565-8443-47e0-9e29-990d57566342",
              "parentUUID": "8f9491a8-13b5-428f-a571-2cd4117104d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us form via WebDriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 4928,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*cy.get('[name=\"first_name\"]').type(\"Pepe\")\ncy.get('[name=\"last_name\"]').type(\"Laínez Valle\")\ncy.get('textarea.feedback-input').type(\"How can I learn Cypress?\")\ncy.get('[type=\"submit\"]').click()\ncy.get('body').contains('Error: all fields are required')*/\n//Contains --> dentro un un texto grande o varias lineas para saber si contiene una palabra o frase.\n//cy.contactForm(data.first_name, data.last_name, \" \", \"How can I learn Cypress?\", 'body', 'Error: Invalid email address')\ncontact_Us_PO.contactForm_Submission(data.first_name, data.last_name, \" \", \"How can I learn Cypress?\", 'body', 'Error: Invalid email address');",
              "err": {},
              "uuid": "82f0af73-7e03-4cb5-923a-d0f03d237945",
              "parentUUID": "8f9491a8-13b5-428f-a571-2cd4117104d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb388565-8443-47e0-9e29-990d57566342",
            "82f0af73-7e03-4cb5-923a-d0f03d237945"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11001,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3507cf17-6a24-4f6f-af27-59d443b88185",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_SECC 28.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\contact-us_SECC 28.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fbbdac07-30f2-4529-95e5-74fecccc88da",
          "title": "Test Contact Us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a successful submission via contact us form",
              "fullTitle": "Test Contact Us form via WebdriverUni Should be able to submit a successful submission via contact us form",
              "timedOut": null,
              "duration": 2959,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#contact-us').invoke('removeAttr', 'target').click({\n  force: true\n}); //Eliminar atributo destino. Este caso \"elimanos\" el paso de clicar en contacto us\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');\ncy.title().should('include', 'WebDriver | Contact Us');\ncy.url().should('include', 'contactus'); //cy.get('#contact-us').click({force: true})\ncy.get('[name=\"first_name\"]').type(\"Joe\");\ncy.get('[name=\"last_name\"]').type(\"blogs\");\ncy.get('[name=\"email\"]').type(\"joe_blogs123@gmail.com\");\ncy.get('textarea.feedback-input').type(\"How can I learn Cypress?\");\ncy.get('[type=\"submit\"]').click();\ncy.get('h1').should('have.text', 'Thank You for your Message!');",
              "err": {},
              "uuid": "2ca1e765-7d87-43e4-a489-11173f2741a7",
              "parentUUID": "fbbdac07-30f2-4529-95e5-74fecccc88da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a successful submission via contact us form as all fields are required",
              "fullTitle": "Test Contact Us form via WebdriverUni Should not be able to submit a successful submission via contact us form as all fields are required",
              "timedOut": null,
              "duration": 1188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#contact-us').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('[name=\"first_name\"]').type(\"Tom\");\ncy.get('[name=\"last_name\"]').type(\"blogs\");\ncy.get('textarea.feedback-input').type(\"How can I learn Cypress?\");\ncy.get('[type=\"submit\"]').click();\ncy.get('body').contains('Error: all fields are required');",
              "err": {},
              "uuid": "7fd640aa-2ba6-4f43-b227-542eb2fce71a",
              "parentUUID": "fbbdac07-30f2-4529-95e5-74fecccc88da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ca1e765-7d87-43e4-a489-11173f2741a7",
            "7fd640aa-2ba6-4f43-b227-542eb2fce71a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ad6797c8-f828-45cc-ac37-d7226cbc3f68",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\date-tables.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\date-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "967685a8-f17f-4ed5-9cba-4e3567602130",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the total age of all users",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the total age of all users",
              "timedOut": null,
              "duration": 1449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get(\"#data-table\").invoke(\"removeAttr\", \"target\").click({\n  force: true\n});\nvar userDetails = [];\nlet num = 0;\ncy.get('#thumbnail-1 td').each(($el, index, $list) => {\n  //Itero por todos los elementos de la tabla\n  userDetails[index] = $el.text();\n}).then(() => {\n  var i;\n  for (i = 0; i < userDetails.length; i++) {\n    if (Number(userDetails[i])) {\n      //Si la celda contiene un numero, entra en la condición y se suma\n      num += Number(userDetails[i]);\n    } //solo vamos a coger los elementos de tipo numero de la tabla\n    //cy.log(userDetails[i]); //muestra todo las \"celdas\" de la tabla por filas\n  }\n  cy.log('Foundo total age ' + num);\n  expect(num).to.eq(322); //Resultado esperado\n});",
              "err": {},
              "uuid": "d5ccf23c-153e-4992-a007-ce2fb36ebd6f",
              "parentUUID": "967685a8-f17f-4ed5-9cba-4e3567602130",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Calculate and assert the age of a given user based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the age of a given user based on last name",
              "timedOut": null,
              "duration": 10133,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#thumbnail-1 tr td:nth-child(2)').each(($el, index, $list) => {\n  //Coge los hijos de la segunda columna que son los last name(Cogemos los apellidos de la columna)\n  const text = $el.text();\n  if (text.includes(\"Woods\")) {\n    cy.get('#thumbnail-1 tr td:nth-child(2)').eq(index).next().then(function (age) {\n      // NEXT --> hace que me de el numero de la edad.\n      const userAge = age.text();\n      expect(userAge).to.equal(\"80\");\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `#thumbnail-1 tr td:nth-child(2)`, but never found it.\n\nThe command was expected to run against origin `http://www.webdriveruniversity.com` but the application is at origin `about://blank`.\n\nThis commonly happens when you have either not navigated to the expected origin or have navigated away unexpectedly.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `#thumbnail-1 tr td:nth-child(2)`, but never found it.\n\nThe command was expected to run against origin `http://www.webdriveruniversity.com` but the application is at origin `about://blank`.\n\nThis commonly happens when you have either not navigated to the expected origin or have navigated away unexpectedly.\n    at Context.eval (http://www.webdriveruniversity.com/__cypress/tests?p=cypress\\e2e\\integration\\webdriver-uni\\date-tables.js:128:8)",
                "diff": null
              },
              "uuid": "52004561-ec48-47e1-897d-c680f2fd52bf",
              "parentUUID": "967685a8-f17f-4ed5-9cba-4e3567602130",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5ccf23c-153e-4992-a007-ce2fb36ebd6f"
          ],
          "failures": [
            "52004561-ec48-47e1-897d-c680f2fd52bf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "20516f89-d277-4571-bf46-add079f30078",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\datepicker.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\datepicker.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fe34c686-edc8-4a0d-a010-764d000c7ab3",
          "title": "Test Datepicker via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from the datepiker",
              "fullTitle": "Test Datepicker via webdriveruni Select date from the datepiker",
              "timedOut": null,
              "duration": 2131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\")\ncy.visit(\"/\");\ncy.get('#datepicker').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#datepicker').click();\n/* let date = new Date();\n date.setDate(date.getDate()) //Nos da el día actual.\n cy.log(date.getDate())\n   let date2 = new Date();\n date2.setDate(date.getDate() + 5) //Sumamos 5 al dia actual\n cy.log(date2.getDate()) */\nvar date = new Date(); //En este ejemplo, vamos a tener como sacar el año, mes y dia(+1) ACTUAL\ndate.setDate(date.getDate() + 260);\nvar futureYear = date.getFullYear();\nvar futureMonth = date.toLocaleString(\"en-US\", {\n  month: \"long\"\n}); //Tenemos que tener en cuenta el calendario ingles o español\nvar futureDay = date.getDate();\ncy.log(\"Future year to select: \" + futureYear);\ncy.log(\"Future month to select: \" + futureMonth);\ncy.log(\"Future day to select: \" + futureDay);\nfunction selectMonthAndYear() {\n  //Seleccionar un día que no se encuentra en el calendario inicial, y hacer que aparezca en pantalla.\n  //Para ello, primero debemos irnos al calendario y al mes y año que aparecen. Luego miramos si el año que hemos puesto se encuentra por pantalla, si no, pulsa las flechitas.\n  cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n    if (!currentDate.text().includes(futureYear)) {\n      cy.get('.next').first().click();\n      selectMonthAndYear();\n    }\n  }).then(() => {\n    cy.get('.datepicker-dropdown').find('.datepicker-switch').first().then(currentDate => {\n      if (!currentDate.text().includes(futureMonth)) {\n        cy.get('.next').first().click();\n        selectMonthAndYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  cy.get('[class = \"day\"]').contains(futureDay).click(); //Seleccionar un dia en el calendario.\n}\nselectMonthAndYear();\nselectFutureDay();",
              "err": {},
              "uuid": "e0715a2f-6cb6-4192-b538-6accc720fd6c",
              "parentUUID": "fe34c686-edc8-4a0d-a010-764d000c7ab3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0715a2f-6cb6-4192-b538-6accc720fd6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd890996-00c7-446e-8915-6d07cf454389",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\file-upload.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\file-upload.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96d602c1-b2a2-430c-95e5-6ab35977e90e",
          "title": "Test File Upload",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Upload a file",
              "fullTitle": "Test File Upload Upload a file",
              "timedOut": null,
              "duration": 802,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#file-upload').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#myFile').selectFile(\"cypress/fixtures/laptop.png\");\ncy.get('#submit-button').click();",
              "err": {},
              "uuid": "8d9d18a5-19be-4534-bd28-729625ed75a2",
              "parentUUID": "96d602c1-b2a2-430c-95e5-6ab35977e90e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload a No file",
              "fullTitle": "Test File Upload Upload a No file",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#file-upload').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#submit-button').click();",
              "err": {},
              "uuid": "199cc49c-b915-43a9-9c24-9208f560f141",
              "parentUUID": "96d602c1-b2a2-430c-95e5-6ab35977e90e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d9d18a5-19be-4534-bd28-729625ed75a2",
            "199cc49c-b915-43a9-9c24-9208f560f141"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "345979ef-6d68-4ec3-951b-df3d9da512d0",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\iframe.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\iframe.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc6071f5-5367-4d41-95e8-4d38dc25bc6c",
          "title": "Handling IFrame & Modals",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Handle webdriveruni iframe and modal",
              "fullTitle": "Handling IFrame & Modals Handle webdriveruni iframe and modal",
              "timedOut": null,
              "duration": 1490,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\")\ncy.visit(\"/\");\ncy.get('#iframe').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#frame').then($iframe => {\n  const body = $iframe.contents().find('body');\n  cy.wrap(body).as('iframe');\n});\ncy.get('@iframe').find('#button-find-out-more').click();\ncy.get('@iframe').find('#myModal').as('modal');\ncy.get('@modal').should($expectedText => {\n  const text = $expectedText.text();\n  expect(text).to.include('Welcome to webdriveruniversity.com we sell a wide range of electrical goods');\n});\ncy.get('@modal').contains('Close').click();",
              "err": {},
              "uuid": "c8f6a162-64c0-4f90-8a00-0b08a6b6bf8c",
              "parentUUID": "dc6071f5-5367-4d41-95e8-4d38dc25bc6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8f6a162-64c0-4f90-8a00-0b08a6b6bf8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eeff8e37-db5a-4d0c-9e42-7184180b0824",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\inspect-item_FINAL.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\inspect-item_FINAL.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34d96888-15d0-46dc-9961-5457bdd5b9e3",
          "title": "Inspect Automation Test Store items using chain of commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on the first item using item header",
              "fullTitle": "Inspect Automation Test Store items using chain of commands Click on the first item using item header",
              "timedOut": null,
              "duration": 5955,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get('#block_frame_featured_1769 > .thumbnails > :nth-child(1) > .fixed_wrapper > .fixed > .prdocutname').click();",
              "err": {},
              "uuid": "d353d0fb-e397-43d6-98d4-b556ebd96521",
              "parentUUID": "34d96888-15d0-46dc-9961-5457bdd5b9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using item text",
              "fullTitle": "Inspect Automation Test Store items using chain of commands Click on the first item using item text",
              "timedOut": null,
              "duration": 3647,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get('.prdocutname').contains('Skinsheen Bronzer Stick').click().then(function (itemHeaderText) {\n  console.log(\"Selected the following item: \" + itemHeaderText.text());\n});\nconsole.log(\"Test primero\"); //Este test aparecera primero en consola, y el otro despues de seleccionar dicho elemento. Su nombre mismo lo indica \"then\"",
              "err": {},
              "uuid": "1459d30f-4523-4abe-a8fc-ccfc89ec37ad",
              "parentUUID": "34d96888-15d0-46dc-9961-5457bdd5b9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using index",
              "fullTitle": "Inspect Automation Test Store items using chain of commands Click on the first item using index",
              "timedOut": null,
              "duration": 2183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://www.automationteststore.com/\");\ncy.get('.fixed_wrapper').find('.prdocutname').eq(0).click();",
              "err": {},
              "uuid": "792b2c42-d2f5-4ecc-918c-240de3d69622",
              "parentUUID": "34d96888-15d0-46dc-9961-5457bdd5b9e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d353d0fb-e397-43d6-98d4-b556ebd96521",
            "1459d30f-4523-4abe-a8fc-ccfc89ec37ad",
            "792b2c42-d2f5-4ecc-918c-240de3d69622"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11785,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c1b82a1b-a60e-452d-a9b9-b8b599215741",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\js-alerts_FINAL-SECC 31.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\js-alerts_FINAL-SECC 31.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4709e4c3-d8cc-49a9-ba8e-f533adf93171",
          "title": "Handle js alerts",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirm js alert contains the correct text",
              "fullTitle": "Handle js alerts Confirm js alert contains the correct text",
              "timedOut": null,
              "duration": 1061,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#button1').click();\ncy.on('window:alert', str => {\n  expect(str).to.equal('I am an alert box!'); //Comprobar que la alerta sea la correcta.\n});",
              "err": {},
              "uuid": "e2b52ef5-b57e-45cd-a9fb-ebea24d7f09d",
              "parentUUID": "4709e4c3-d8cc-49a9-ba8e-f533adf93171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate js confirm alert box works correctly when clicking ok",
              "fullTitle": "Handle js alerts Validate js confirm alert box works correctly when clicking ok",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#button4').click();\ncy.on('window:confirm', str => {\n  //Ponemos confirm para devolver un return true si la alerta es OK\n  return true;\n});\ncy.get('#confirm-alert-text').contains('You pressed OK!');",
              "err": {},
              "uuid": "33410f96-65ef-46dd-a723-aabe4b4be060",
              "parentUUID": "4709e4c3-d8cc-49a9-ba8e-f533adf93171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate js confirm alert box works correctly when clicking cancel",
              "fullTitle": "Handle js alerts Validate js confirm alert box works correctly when clicking cancel",
              "timedOut": null,
              "duration": 380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#button4').click();\ncy.on('window:confirm', str => {\n  return false;\n});\ncy.get('#confirm-alert-text').contains('You pressed Cancel!');",
              "err": {},
              "uuid": "ebc56673-91dd-4fe2-91ab-1fa2c2d34fb5",
              "parentUUID": "4709e4c3-d8cc-49a9-ba8e-f533adf93171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate js confirm alert box using a stub",
              "fullTitle": "Handle js alerts Validate js confirm alert box using a stub",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\");\ncy.visit(\"http://www.webdriveruniversity.com\");\ncy.get('#popup-alerts').invoke('removeAttr', 'target').click({\n  force: true\n});\nconst stub = cy.stub();\ncy.on('window:confirm', stub);\ncy.get('#button4').click().then(() => {\n  expect(stub.getCall(0)).to.be.calledWith('Press a button!');\n}).then(() => {\n  return true;\n}).then(() => {\n  cy.get('#confirm-alert-text').contains('You pressed OK!');\n});",
              "err": {},
              "uuid": "d103ab68-97f7-4e51-9ee2-d456437e0ab6",
              "parentUUID": "4709e4c3-d8cc-49a9-ba8e-f533adf93171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2b52ef5-b57e-45cd-a9fb-ebea24d7f09d",
            "33410f96-65ef-46dd-a723-aabe4b4be060",
            "ebc56673-91dd-4fe2-91ab-1fa2c2d34fb5",
            "d103ab68-97f7-4e51-9ee2-d456437e0ab6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "46ca9138-8bb6-427b-8e95-d61ecdc67810",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\mouse-actions.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\mouse-actions.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35a7da24-6e9f-419c-8a02-85194947e6fb",
          "title": "Test mouse actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "I should be able hold down the left mouse click button on a given element",
              "fullTitle": "Test mouse actions I should be able hold down the left mouse click button on a given element",
              "timedOut": null,
              "duration": 1223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#actions').scrollIntoView().invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#click-box').trigger('mousedown', {\n  which: 1\n}).then($element => {\n  expect($element).to.have.css('background-color', 'rgb(0,255,0)');\n});",
              "err": {
                "message": "AssertionError: expected '<div#click-box.col-lg-12.text-center>' to have CSS property 'background-color' with the value 'rgb(0,255,0)', but the value was 'rgb(0, 255, 0)'",
                "estack": "AssertionError: expected '<div#click-box.col-lg-12.text-center>' to have CSS property 'background-color' with the value 'rgb(0,255,0)', but the value was 'rgb(0, 255, 0)'\n    at Context.eval (http://www.webdriveruniversity.com/__cypress/tests?p=cypress\\e2e\\integration\\webdriver-uni\\mouse-actions.js:135:32)",
                "diff": "- 'rgb(0, 255, 0)'\n+ 'rgb(0,255,0)'\n"
              },
              "uuid": "0d9ace1e-d781-41ea-b5c8-d3446e79fbfc",
              "parentUUID": "35a7da24-6e9f-419c-8a02-85194947e6fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0d9ace1e-d781-41ea-b5c8-d3446e79fbfc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "11c45e43-a05c-417f-9d47-15d974e87b4f",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\radio-buttons.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\radio-buttons.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33ebdf44-b91a-4f68-9425-dc51249b1bda",
          "title": "Verify radio buttons via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Check specific radio buttons",
              "timedOut": null,
              "duration": 1283,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#radio-buttons').find(\"[type='radio']\").first().check(); //Check --> marcamos el primero \"radio\" que se encuentra.\ncy.get('#radio-buttons').find(\"[type='radio']\").eq(2).check(); //Si dejo las dos sentencias activas, se selecciona uno y luego la otra. ¿no estaría correctamente, no?",
              "err": {},
              "uuid": "7bedfad7-a4df-4851-ad84-4c75243d0f63",
              "parentUUID": "33ebdf44-b91a-4f68-9425-dc51249b1bda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the states of specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Validate the states of specific radio buttons",
              "timedOut": null,
              "duration": 10114,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[value='lettuce']\").should('not.be.checked');\ncy.get(\"[value='pumpkin']\").should('be.checked');\ncy.get(\"[value='lettuce']\").check();\ncy.get(\"[value='lettuce']\").should('be.checked');\ncy.get(\"[value='pumpkin']\").should('not.be.checked');\ncy.get(\"[value='cabbage']\").should('be.disabled'); //Comprobar que esta desactivado",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[value='lettuce']`, but never found it.\n\nThe command was expected to run against origin `http://www.webdriveruniversity.com` but the application is at origin `about://blank`.\n\nThis commonly happens when you have either not navigated to the expected origin or have navigated away unexpectedly.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[value='lettuce']`, but never found it.\n\nThe command was expected to run against origin `http://www.webdriveruniversity.com` but the application is at origin `about://blank`.\n\nThis commonly happens when you have either not navigated to the expected origin or have navigated away unexpectedly.\n    at Context.eval (http://www.webdriveruniversity.com/__cypress/tests?p=cypress\\e2e\\integration\\webdriver-uni\\radio-buttons.js:113:33)",
                "diff": null
              },
              "uuid": "3cda8fb2-487c-4f6e-93e7-bd6e69453932",
              "parentUUID": "33ebdf44-b91a-4f68-9425-dc51249b1bda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bedfad7-a4df-4851-ad84-4c75243d0f63"
          ],
          "failures": [
            "3cda8fb2-487c-4f6e-93e7-bd6e69453932"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11397,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "634e27a5-99e9-4df1-8bde-c004aa210db4",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\select-dropdown-list.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\select-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2e254ed-2af1-423a-bad4-c4f01aab4f45",
          "title": "Interact with dropdown lists via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific values via select dropdown list",
              "fullTitle": "Interact with dropdown lists via webdriveruni Select specific values via select dropdown list",
              "timedOut": null,
              "duration": 1809,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#dropdown-checkboxes-radiobuttons').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#dropdowm-menu-1').select('c#'); //Seleccionamos en el desplegable la opcion de C(tenemos que coger el value)\ncy.get('#dropdowm-menu-2').select('junit').should('have.value', 'junit');\ncy.get('#dropdowm-menu-3').select('javascript'); //Challenge\ncy.get('#dropdowm-menu-2').select('maven').should('have.value', 'maven');\ncy.get('#dropdowm-menu-2').select('TestNG').contains('TestNG'); //otra forma de seleccionar una opcion.",
              "err": {},
              "uuid": "583cd4da-bd8a-445c-b7dc-61fbcdc2b3e2",
              "parentUUID": "e2e254ed-2af1-423a-bad4-c4f01aab4f45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "583cd4da-bd8a-445c-b7dc-61fbcdc2b3e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7a7c9b4f-2c25-4100-9fde-1502670c2744",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\selectors.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\selectors.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6d16c9e-fde3-4b7f-a1de-5f6955e07d63",
          "title": "Selectos examples",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Examples of Selectors via WebdriverUni Contact Us Page",
              "fullTitle": "Selectos examples Examples of Selectors via WebdriverUni Contact Us Page",
              "timedOut": null,
              "duration": 719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://www.webdriveruniversity.com/Contact-Us/contactus.html\"); //By tag name\ncy.get(\"input\"); //By attribute name and value\ncy.get(\"input[name='first_name']\"); //By id\ncy.get(\"#contact_me\"); //By class\ncy.get(\".feedback-input\"); //By multiple classes\ncy.get(\"[class='navbar navbar-inverse navbar-fixed-top']\"); //By two different attributes\ncy.get(\"[name='email'][placeholder='Email Address']\"); //By xpath\ncy.xpath(\"//input[@name='first_name']\");",
              "err": {},
              "uuid": "d8924af2-5716-4275-8ea4-9e5c485cf7ff",
              "parentUUID": "c6d16c9e-fde3-4b7f-a1de-5f6955e07d63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8924af2-5716-4275-8ea4-9e5c485cf7ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 719,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7b9eb80b-f25c-43f2-bfae-6433477a4eef",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\webdriver-uni\\traversing-elements.js",
      "file": "cypress\\e2e\\integration\\webdriver-uni\\traversing-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f0bdd0d6-cc4f-482f-9743-230168265eda",
          "title": "Traversing DOM elements in Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "children() to get the children of DOM elements",
              "fullTitle": "Traversing DOM elements in Cypress children() to get the children of DOM elements",
              "timedOut": null,
              "duration": 1535,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-breadcrumb').children('.active').should('contain', 'Contact Us');",
              "err": {},
              "uuid": "229da9bd-f2e6-4483-a2d7-4e658e45593e",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "closest() to validate the closest ancestor DOM element",
              "fullTitle": "Traversing DOM elements in Cypress closest() to validate the closest ancestor DOM element",
              "timedOut": null,
              "duration": 432,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-badge').closest('ul').should('have.class', 'list-group'); //Obtenga el primer elemento DOM que coincida con el selector(más cercano)\n//Encuentra el elemento más cercano del .traversal-badge la clase 'ul'",
              "err": {},
              "uuid": "e3471f58-6ce0-4bd8-a9ae-392c08ef3c92",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "eq() to retrieve a specific element based on index",
              "fullTitle": "Traversing DOM elements in Cypress eq() to retrieve a specific element based on index",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// --> * para seleccionar todos los elementos de la lista.\ncy.get('.traversal-drinks-list > *').eq(2).should('contain', 'Milk'); // El elemento 2 de la lista tiene que contener Milk",
              "err": {},
              "uuid": "cff1ec0e-d785-43ec-92da-cbcc71339918",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter() to retrieve DOM elements that match a specific selector",
              "fullTitle": "Traversing DOM elements in Cypress filter() to retrieve DOM elements that match a specific selector",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.btn-group-toggle > *').filter('.active').should('contain', 'Button-1'); // Filtar por active.",
              "err": {},
              "uuid": "943007e9-210c-4a78-97d5-969146226619",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "find() to retrieve DOM elements of a given selector",
              "fullTitle": "Traversing DOM elements in Cypress find() to retrieve DOM elements of a given selector",
              "timedOut": null,
              "duration": 669,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "e28811e5-21e4-456b-b05c-f5a8a7ba88be",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "first() to retrieve the first DOM element within elements ",
              "fullTitle": "Traversing DOM elements in Cypress first() to retrieve the first DOM element within elements ",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-table > tbody > tr > td').first().should('contain', 'Andy'); //Decir cual es el primer elemento que se encuentra.",
              "err": {},
              "uuid": "0025f61e-8f0d-40f1-8f47-6103d4dc50a8",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "last() to retrieve the last DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress last() to retrieve the last DOM element within elements",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.traversal-table > tbody > tr > td').last().should('contain', 'Scott'); //Decir cual es el último elemento que se encuentra.",
              "err": {},
              "uuid": "882611bf-4666-4ace-8c6a-867f5a6ceee0",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextAll() to get all of the next sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress nextAll() to get all of the next sibling DOM elements within elements",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Obtener todos los hermanos siguientes dado un elemento.\ncy.get('.traversal-drinks-list').contains('Tea').nextAll().should('have.length', 3); //En este ejemplo me tiene que pasar el test diciendo que tiene 3 hermanos,",
              "err": {},
              "uuid": "ee6cc35f-c1fa-4446-9884-22faaf7834a1",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "fullTitle": "Traversing DOM elements in Cypress nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Obtenga todos los hermanos siguientes de cada elemento DOM en un conjunto de elementos DOM coincidentes hasta el elemento proporcionado, pero sin incluirlo.\ncy.get('#coffee').nextUntil('#milk').should('have.length', 1); //No contamos los elementos de \"inicio\" y \"final\"",
              "err": {},
              "uuid": "0dcb3b94-5ea8-41e7-8415-c91c936566ab",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "not() to remove DOM element(s) from the set of elements",
              "fullTitle": "Traversing DOM elements in Cypress not() to remove DOM element(s) from the set of elements",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Lo opuesto a .filter()\n//cy.get('.traversal-button-states > button').not('.disabled').should('not.have.class', 'disabled')\ncy.get('.traversal-button-states > button').not('.disabled').should('have.length', 3);",
              "err": {},
              "uuid": "d2f9b435-c97f-4042-811c-5583cebf6afb",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parent() To get parent DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parent() To get parent DOM element of elements",
              "timedOut": null,
              "duration": 663,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//sube un nivel\ncy.get('.traversal-mark').parent().should('contain', 'Lorem ipsum dolor sit amet');",
              "err": {},
              "uuid": "5674cd41-7f35-4810-8b53-69da249a99c7",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parents() to get parents DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parents() to get parents DOM element of elements",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//sube varios niveles\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "037f44ad-e4ac-4b12-aec0-172a101a3a39",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prev() to get the previous sibling DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress prev() to get the previous sibling DOM element within elements",
              "timedOut": null,
              "duration": 612,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// PREV --> Obtenga el hermano inmediatamente anterior de cada elemento en un conjunto de elementos.\ncy.get('#sugar').prev().should('contain', 'Espresso'); //.contains('Expresso)",
              "err": {},
              "uuid": "3c661dad-61c1-4ec6-a213-f1870e3bc9f3",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevAll() to get all previous sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress prevAll() to get all previous sibling DOM elements within elements",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//PREVALL --> Obtenga todos los hermanos anteriores de cada elemento DOM en un conjunto de elementos DOM coincidentes.\ncy.get('.sales').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "fe43be73-2244-4e11-8a3a-eca146fcfaa1",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevUntil() to get all previous sibling DOM elements within elements until other element",
              "fullTitle": "Traversing DOM elements in Cypress prevUntil() to get all previous sibling DOM elements within elements until other element",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// PREVUNITL --> todos los hermanos en un conjunto.\ncy.get('#veggie').prevUntil('#fruits').should('have.length', 5);",
              "err": {},
              "uuid": "9835db0c-e8df-4232-911a-7b11d9385387",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "siblings() To get all sibling DOM elements of elements",
              "fullTitle": "Traversing DOM elements in Cypress siblings() To get all sibling DOM elements of elements",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Obtenga elementos DOM hermanos.ES una consulta\ncy.get('.traversal-button-other-states .active').siblings().should('have.length', 3);",
              "err": {},
              "uuid": "f7ea662b-b7e6-480a-9eca-f8e161c80c21",
              "parentUUID": "f0bdd0d6-cc4f-482f-9743-230168265eda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "229da9bd-f2e6-4483-a2d7-4e658e45593e",
            "e3471f58-6ce0-4bd8-a9ae-392c08ef3c92",
            "cff1ec0e-d785-43ec-92da-cbcc71339918",
            "943007e9-210c-4a78-97d5-969146226619",
            "e28811e5-21e4-456b-b05c-f5a8a7ba88be",
            "0025f61e-8f0d-40f1-8f47-6103d4dc50a8",
            "882611bf-4666-4ace-8c6a-867f5a6ceee0",
            "ee6cc35f-c1fa-4446-9884-22faaf7834a1",
            "0dcb3b94-5ea8-41e7-8415-c91c936566ab",
            "d2f9b435-c97f-4042-811c-5583cebf6afb",
            "5674cd41-7f35-4810-8b53-69da249a99c7",
            "037f44ad-e4ac-4b12-aec0-172a101a3a39",
            "3c661dad-61c1-4ec6-a213-f1870e3bc9f3",
            "fe43be73-2244-4e11-8a3a-eca146fcfaa1",
            "9835db0c-e8df-4232-911a-7b11d9385387",
            "f7ea662b-b7e6-480a-9eca-f8e161c80c21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1a12f3b6-411c-4c26-9a5e-99c2d2c74521",
      "title": "",
      "fullFile": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "file": "cypress\\e2e\\1-getting-started\\todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1890897c-60ee-424c-99c8-4da41add89b4",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2); // We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "2b632db0-9c79-4ea2-b99c-92bb8b224936",
              "parentUUID": "1890897c-60ee-424c-99c8-4da41add89b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 411,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat'; // Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`); // Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "f9392af0-de68-427c-af56-ee138a54399c",
              "parentUUID": "1890897c-60ee-424c-99c8-4da41add89b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check(); // Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "81953063-3065-4880-b752-81e29675f6c5",
              "parentUUID": "1890897c-60ee-424c-99c8-4da41add89b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d27a9bfe-304b-456d-88b3-77c01ab64fd6",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 259,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click(); // After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog'); // For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "74d6e23d-c57e-4146-85e1-cc60776a446f",
                  "parentUUID": "d27a9bfe-304b-456d-88b3-77c01ab64fd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 251,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "e6960831-3cf0-4fea-835e-5f762229e70c",
                  "parentUUID": "d27a9bfe-304b-456d-88b3-77c01ab64fd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 264,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click(); // Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill'); // Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "106a13c1-d356-4ec2-81d7-e93fd77bff26",
                  "parentUUID": "d27a9bfe-304b-456d-88b3-77c01ab64fd6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74d6e23d-c57e-4146-85e1-cc60776a446f",
                "e6960831-3cf0-4fea-835e-5f762229e70c",
                "106a13c1-d356-4ec2-81d7-e93fd77bff26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 774,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "2b632db0-9c79-4ea2-b99c-92bb8b224936",
            "f9392af0-de68-427c-af56-ee138a54399c",
            "81953063-3065-4880-b752-81e29675f6c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}